<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- 1.配置数据源 -->
		<!-- 引入数据库配置文件 -->
		<context:property-placeholder location="classpath:db.properties"/>
		<!-- c3p0连接池 -->
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
			<property name="driverClass" value="${jdbcDriver}"></property>
			<property name="jdbcUrl" value="${jdbcUrl}"></property>
			<property name="user" value="${jdbcUser}"></property>
			<property name="password" value="${jdbcPassword}"></property>
		</bean>
		
		
	<!-- 2.配置扫描器，除了controller，其余都要扫描 -->
		<context:component-scan base-package="cn.fqy.ssm">
			<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		</context:component-scan>

	
	<!-- 3.spring与 mybatis整合 -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<!-- 指定mybatis全局配置文件 -->
			<property name="configLocation" value="classpath:mybatis-config.xml"></property>
			<property name="dataSource" ref="dataSource"></property>
			<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
		</bean>
		<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="cn.fqy.ssm.dao"></property>
		</bean>
		
		<!-- 注入sqlSession -->
		<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
			<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
			<constructor-arg name="executorType" value="BATCH" />
		</bean>
	
	
	<!-- 4.事务控制 -->
	<bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 开启基于注解的事务，通过xml形式配置的事务 -->
	<aop:config>
		<!-- 切入点表达式 -->
		<aop:pointcut expression="execution(* cn.fqy.ssm.service..*(..))" id="txPoint"/>
		<!-- 配置事务增强 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint" />
	</aop:config>
	<!-- 配置事务增强，事务如何切入 .通过transaction-manager与bean的事务管理器产生联系-->
	<tx:advice id="txAdvice" transaction-manager="dataSourceTransactionManager">
		<tx:attributes>
			<!-- 所以方法都是事务方法 -->
			<tx:method name="*"/>
			<!-- 以get开头的方法执行只读操作 -->
			<tx:method name="get*" read-only="true"/>
		</tx:attributes>
	</tx:advice>

</beans>